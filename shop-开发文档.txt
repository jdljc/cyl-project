主机公网ip：39.97.176.44
静态资源服务器地址：http://39.97.176.44:8080，运行在docker容器中，(html|jpg|png|js|css|...)文件存放到该服务器下
动态资源服务器地址：http://39.97.176.44:8888,后续会逐渐增加

#命名
项目命名：项目的使用maven子模块创建，shop为根目录，创建名称应为shop-xxx
包名命名：如com.cyl.xxx，均为小写
类名，变量名，方法名均使用驼峰命名规范，使用英文名称，全拼，常用单词可使用缩写

#代码风格
单一原则，冗余代码尽量封装到方法中
当一个方法中代码量较大时，根据代码功能逻辑适当使用空行分隔，或者在空行位置使用注释描述
注释统一使用文档注释，包括仅需要注释一行的情况（/**  xxxx */）
缩减“{}”，if或者for语句下只有一行时省略“{}”，语句较短时if/for与内部语句同行，使用空格隔开

#代码规范
所有controller使用@RestController注解，路径命名对应模块名称，如“/user”
controller方法根据操作类型分为增删改查，对应不同的RequestMethod
      增：RequestMethod.POST  删：DELETE  改：PUT  查：GET
其中根据id查询时id参数存在于路径中，如“.../user/1”，设定@PathVariable注解
对于json请求数据存在于请求体中的，使用@RequestBody注解解析
设定浏览器接收数据类型为json格式
完整示例：
1.GET
@RequestMapping(method=RequestMethod.GET,value="/{goodsId}",produces="application/json")
	public String get(@PathVariable("goodsId")int goodsId){
		return JSON.toJSONString(service.get(goodsId));
	}
2.其它
@RequestMapping(method=RequestMethod.PUT,produces="application/json")
	public String update(@RequestBody Order order){
		return service.update(order)+"";
	}

#其它
所有的公共代码放到shop-common中，包括工具类，枚举，切面等